{% extends 'base.html.twig' %}

{% block title %}Chat with Assistant{% endblock %}

{% block stylesheets %}
    <style>
        .chat-input-form {
            border-top: 1px solid #ccc;
            background-color: #f8f9fa;
            z-index: 1000; /* Assure que le formulaire est au-dessus de tout autre contenu */
            padding: 10px;
        }

        .chat-input-form .input-group .form-control {
            border-radius: 0; /* Évite les coins arrondis */
        }

        .chat-input-form .btn {
            border-radius: 0; /* Pour un style uniforme */
        }

        .message-bubble.bg-success-custom {
            background-color: rgba(40, 167, 69, 0.3); /* Vert plus doux */
            color: #000; /* Le texte peut rester noir ou autre couleur selon ton design */
        }

        .chat-container {
            background-color: #f8f9fa;
        }

        .chat-content {
            border: 1px solid #ddd;
            background-color: #ffffff;
            padding: 15px;
        }

        #chat-history {
            background-color: #f1f1f1;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 5px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="chat-container" style="display: flex; justify-content: center; align-items: flex-start; height: 90vh; padding: 20px;">
    <!-- Colonne gauche : Liste des chats -->
    <div class="chat-sidebar" style="flex: 0 0 200px; margin-right: 20px;">
        <h5>Historique des chats</h5>
        <ul class="list-group">
            {% for chat in chatList %}
                <li class="list-group-item {% if selectedThreadId == chat.threadId %}active bg-primary text-white{% endif %}">
                    <a href="{{ path('chat_index', {'threadId': chat.threadId}) }}" class="text-decoration-none text-white">
                        Chat ID: {{ chat.threadId }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    </div>

    <!-- Colonne centrale : Chat actuel -->
    <div class="chat-content" style="flex: 0 0 1200px; display: flex; flex-direction: column; height: 100%;">
        <h5>Chat actuel</h5>

        {% if selectedThreadId is null %}
            <p>Aucun chat sélectionné. Choisissez un chat dans la liste de gauche.</p>
        {% else %}
            <!-- Historique du chat -->
            <div id="chat-history" class="card mb-4" style="flex: 1; overflow-y: auto; height: 600px;">
                <div class="card-body">
                    {% for message in messages %}
                        <div class="d-flex justify-content-{{ message.role == 'user' ? 'end' : 'start' }} mb-3">
                            <div class="message-bubble {{ message.role == 'user' ? 'bg-primary text-white' : 'bg-success-custom' }} p-2 rounded-3 mw-75">
                                {{ message.content }}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Formulaire pour envoyer un message -->
            <div class="chat-input-form bg-white py-3">
                <div class="container">
                    {{ form_start(form, {'attr': {'id': 'chat-form', 'class': 'mt-3'}, 'action': path('ask_assistant', {'threadId': selectedThreadId})}) }}
                        <div class="input-group">
                            {{ form_widget(form.message, {'attr': {'class': 'form-control', 'placeholder': 'Tapez votre message...'}}) }}
                            <button type="submit" class="btn btn-primary">Envoyer</button>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        {% endif %}
    </div>

    <!-- Colonne droite : Nouveau chat -->
    <div class="chat-new" style="flex: 0 0 200px; margin-left: 20px;">
        <button class="btn btn-success" onclick="window.location.href='{{ path('chat_new') }}'">
            Nouveau Chat
        </button>
    </div>
</div>





{% endblock %}
{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
    // Faire défiler automatiquement le chat vers le bas
    var chatHistory = document.getElementById('chat-history');
    chatHistory.scrollTop = chatHistory.scrollHeight;

    // Gérer l'envoi du formulaire en AJAX
    $(document).on('submit', '#chat-form', function(e) {
        e.preventDefault();

        // Récupérer le threadId depuis l'URL ou un attribut data sur le formulaire
        var urlParams = new URLSearchParams(window.location.search);
        var threadId = urlParams.get('threadId') || $('#chat-form').data('thread-id');

        var formData = $(this).serialize();
        if (threadId) {
            formData += '&threadId=' + threadId;
        }

        $.ajax({
            type: 'POST',
            url: $(this).attr('action'),
            data: formData,
            success: function(response) {
                // Ajouter les nouveaux messages dans le chat
                $('#chat-history .card-body').append(
                    '<div class="d-flex justify-content-end mb-3">' +
                    '<div class="message-bubble bg-primary text-white p-2 rounded-3 mw-75">' +
                    response.question + '</div></div>'
                );

                $('#chat-history .card-body').append(
                    '<div class="d-flex justify-content-start mb-3">' +
                    '<div class="message-bubble bg-light p-2 rounded-3 mw-75">' +
                    response.response + '</div></div>'
                );

                // Défilement automatique vers le bas du chat
                chatHistory.scrollTop = chatHistory.scrollHeight;

                // Réinitialiser le champ de texte du formulaire
                $('#chat-form input[type="text"]').val('');

                // Mettre à jour l'URL si un nouveau threadId est reçu
                if (response.threadId && window.history.pushState) {
                    var newurl = window.location.protocol + "//" + window.location.host + 
                                 window.location.pathname + '?threadId=' + response.threadId;
                    window.history.pushState({path:newurl},'',newurl);
                }
            }
        });
    });
});
</script>
{% endblock %}
